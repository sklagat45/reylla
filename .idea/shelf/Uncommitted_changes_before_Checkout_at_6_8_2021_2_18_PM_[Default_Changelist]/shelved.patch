Index: app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceListAdapter.kt	(date 1622120356000)
+++ app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceListAdapter.kt	(date 1622120356000)
@@ -0,0 +1,58 @@
+package com.sklagat46.reylla.adapter.providersAdapters
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.firebase.ui.firestore.FirestoreRecyclerAdapter
+import com.firebase.ui.firestore.FirestoreRecyclerOptions
+import com.sklagat46.reylla.R
+import com.sklagat46.reylla.listener.CustomItemClickListener
+import com.sklagat46.reylla.model.HairCareServiceModel
+import kotlinx.android.synthetic.main.row_list_service_item.view.*
+
+
+class HairCareServiceListAdapter(
+    private val context: Context,
+    options: FirestoreRecyclerOptions<HairCareServiceModel>,
+    private val listener: CustomItemClickListener
+) :
+    FirestoreRecyclerAdapter<HairCareServiceModel, HairCareServiceListAdapter.HairCareHolder>(
+        options
+    ) {
+
+    override fun onCreateViewHolder(
+        parent: ViewGroup,
+        viewType: Int
+    ): HairCareHolder {
+        val itemView = LayoutInflater.from(parent.context)
+            .inflate(R.layout.row_list_service_item, parent, false)
+        val mViewHolder = HairCareHolder(itemView)
+        itemView.setOnClickListener { v -> listener.onItemClick(v, mViewHolder.position) }
+        return mViewHolder
+    }
+
+    inner class HairCareHolder(itemView: View) :
+        RecyclerView.ViewHolder(itemView) {
+        fun bind(serviceItem: HairCareServiceModel) {
+            itemView.tv_item_service_name.text = serviceItem.styleName
+            itemView.tv_item_duration.text = serviceItem.styleDuration
+            itemView.tv_item_cost.text = serviceItem.styleCost
+
+            Glide.with(context)
+                .load(serviceItem.mserviceImageURL)
+                .into(itemView.iv_item_service_image)
+        }
+    }
+
+
+    override fun onBindViewHolder(
+        holder: HairCareHolder,
+        position: Int,
+        model: HairCareServiceModel
+    ) {
+        holder.bind(model)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/sklagat46/reylla/firebase/FirestoreClass.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.firebase\r\n\r\nimport android.app.Activity\r\nimport android.util.Log\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.SetOptions\r\nimport com.sklagat46.reylla.activities.SignInActivity\r\nimport com.sklagat46.reylla.activities.SignUpActivity\r\nimport com.sklagat46.reylla.activities.agentclients.RegisterCustomer\r\nimport com.sklagat46.reylla.activities.serviceproviders.*\r\nimport com.sklagat46.reylla.activities.serviceproviders.addingNewService.*\r\nimport com.sklagat46.reylla.activities.serviceproviders.ui.gallery.GalleryFragment\r\nimport com.sklagat46.reylla.model.*\r\nimport com.sklagat46.reylla.utils.Constants\r\n\r\n\r\n/**\r\n * A custom class where we will add the operation performed for the firestore database.\r\n */\r\nclass FirestoreClass {\r\n\r\n    @JvmField\r\n    // Create a instance of Firebase Firestore\r\n    val mFireStore = FirebaseFirestore.getInstance()\r\n\r\n    /**\r\n     * A function to make an entry of the registered user in the firestore database.\r\n     */\r\n    fun registerUser(activity: SignUpActivity, userInfo: User) {\r\n\r\n        mFireStore.collection(Constants.USERS)\r\n            // Document ID for users fields. Here the document it is the User ID.\r\n            .document(getCurrentUserID())\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(userInfo, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.userRegisteredSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error writing document\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function to make an entry of the registered Individual service provider in the firestore database.\r\n     */\r\n    fun registerIndividualProvider(\r\n        activity: IndividualRegister,\r\n        individualInfo: IndividualProviders\r\n    ) {\r\n        mFireStore.collection(Constants.INDIVIDUALPROVIDERS)\r\n            // Document ID for users fields. Here the document it is the User ID.\r\n            .document(getCurrentUserID())\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(individualInfo, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.individualRegisteredSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error writing document\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function to make an entry of the registered company in the firestore database.\r\n     */\r\n    fun registerCustomer(activity: RegisterCustomer, customerInfor: Customer) {\r\n\r\n        mFireStore.collection(Constants.CUSTOMERS)\r\n            // Document ID for users fields. Here the document it is the User ID.\r\n            .document(getCurrentUserID())\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(customerInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.customerRegisteredSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error writing document\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function to make an entry of the registered customer in the firestore database.\r\n     */\r\n    fun registerCompany(activity: CompanyRegister, companyInfor: Company) {\r\n\r\n        mFireStore.collection(Constants.COMPANIES)\r\n            // Document ID for users fields. Here the document it is the User ID.\r\n            .document(getCurrentUserID())\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(companyInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.companyRegisteredSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error writing document\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to get the product details based on the product id.\r\n     */\r\n    fun getServiceListFromFirestoreDB(activity: HairCareActivity, service: Service) {\r\n\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.HAIR_SERVICES)\r\n            .document(getCurrentUserID())\r\n            .get() // Will get the document snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the product details in the form of document.\r\n                Log.e(activity.javaClass.simpleName, document.toString())\r\n\r\n                // Convert the snapshot to the object of Product data model class.\r\n                val service = document.toObject(Service::class.java)!!\r\n\r\n//                activity.productDetailsSuccess(service)\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                // Hide the progress dialog if there is an error.\r\n//                activity.hideProgressDialog()\r\n\r\n                Log.e(activity.javaClass.simpleName, \"Error while getting the product details.\", e)\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadHairDetails(activity: AddHairServiceActivity, serviceInfor: Service) {\r\n        mFireStore.collection(Constants.HAIR_SERVICES)\r\n            .document()\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(serviceInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadBridalDetails(activity: AddBridalServiceActivity, bridalInfor: BridalService) {\r\n\r\n        mFireStore.collection(Constants.BRIDAL_SERVICES)\r\n            .document()\r\n//            .whereEqualTo(\"styleName\", serviceInfor.styleName)\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(bridalInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadNailDetails(activity: AddNailCareServiceActivity, nailInfor: NailService) {\r\n\r\n        mFireStore.collection(Constants.NAIL_SERVICES)\r\n            .document()\r\n//            .whereEqualTo(\"styleName\", serviceInfor.styleName)\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(nailInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadMakeupDetails(activity: AddMakeUpServiceActivity, makeupInfor: MakeupService) {\r\n\r\n        mFireStore.collection(Constants.MAKEUP_SERVICES)\r\n            .document()\r\n//            .whereEqualTo(\"styleName\", serviceInfor.styleName)\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(makeupInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadMassageDetails(activity: AddMassageServiceActivity, massageInfor: MassageService) {\r\n\r\n        mFireStore.collection(Constants.MASSAGE_SERVICES)\r\n            .document()\r\n//            .whereEqualTo(\"styleName\", serviceInfor.styleName)\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(massageInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to make an entry of the user's product in the cloud firestore database.\r\n     */\r\n    fun uploadTatColourDetails(\r\n        activity: AddTatooAndColourServiceActivity,\r\n        tatColourInfor: TatColorService\r\n    ) {\r\n\r\n        mFireStore.collection(Constants.TATCOLOUR_SERVICES)\r\n            .document()\r\n//            .whereEqualTo(\"styleName\", serviceInfor.styleName)\r\n            // Here the userInfo are Field and the SetOption is set to merge. It is for if we wants to merge\r\n            .set(tatColourInfor, SetOptions.merge())\r\n            .addOnSuccessListener {\r\n                // Here call a function of base activity for transferring the result to it.\r\n                activity.serviceUploadSuccess()\r\n            }\r\n            .addOnFailureListener { e ->\r\n\r\n                activity.hideProgressDialog()\r\n\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while uploading the service details.\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to SignIn using firebase and get the user details from Firestore Database.\r\n     */\r\n    fun signInUser(activity: SignInActivity) {\r\n\r\n        // Here we pass the collection name from which we wants the data.\r\n        mFireStore.collection(Constants.INDIVIDUALPROVIDERS)\r\n            // The document id to get the Fields of user.\r\n            .document(getCurrentUserID())\r\n            .get()\r\n            .addOnSuccessListener { document ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName, document.toString()\r\n                )\r\n\r\n                // Here we have received the document snapshot which is converted into the User Data model object.\r\n                val loggedInUser = document.toObject(User::class.java)!!\r\n\r\n                // Here call a function of base activity for transferring the result to it.\r\n//                activity.signInSuccess(loggedInUser)\r\n            }\r\n            .addOnFailureListener { e ->\r\n                Log.e(\r\n                    activity.javaClass.simpleName,\r\n                    \"Error while getting loggedIn user details\",\r\n                    e\r\n                )\r\n            }\r\n    }\r\n\r\n    /**\r\n     * A function for getting the user id of current logged user.\r\n     */\r\n    fun getCurrentUserID(): String {\r\n        // TODO (Step 1: Return the user id if he is already logged in before or else it will be blank.)\r\n        // START\r\n        // An Instance of currentUser using FirebaseAuth\r\n        val currentUser = FirebaseAuth.getInstance().currentUser\r\n\r\n        // A variable to assign the currentUserId if it is not null or else it will be blank.\r\n        var currentUserID = \"\"\r\n        if (currentUser != null) {\r\n            currentUserID = currentUser.uid\r\n        }\r\n\r\n        return currentUserID\r\n        // END\r\n    }\r\n\r\n\r\n    fun deleteService(activity: Activity, serviceID: String) {\r\n        TODO(\"Not yet implemented\")\r\n    }\r\n\r\n\r\n    fun getServiceList(hairCareActivity: HairCareActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.HAIR_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Service List\", document.toString())\r\n                Log.e(\"Service List\", document.documents.toString())\r\n\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val serviceList: ArrayList<Service> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document) {\r\n                    val service = i.toObject(Service::class.java)\r\n                    service!!.service_id = i.id\r\n                    serviceList.add(service)\r\n                    Log.e(\"Service List\", document.documents.toString())\r\n\r\n//                    Log.d(\"UserDownload\", \"${document.id} => ${document.data}\")\r\n//                    serviceList\r\n                }\r\n\r\n\r\n                when {\r\n                    else -> {\r\n                        hairCareActivity.successServiceListFromFireStore(serviceList)\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (hairCareActivity) {\r\n                    is HairCareActivity -> {\r\n                        hairCareActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n\r\n\r\n    }\r\n\r\n    fun getBridalServiceList(bridalActivity: BridalActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.BRIDAL_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Bridal Service List\", document.documents.toString())\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val bridalServiceList: ArrayList<BridalService> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document.documents) {\r\n                    val bridalService = i.toObject(BridalService::class.java)\r\n                    bridalService!!.service_id = i.id\r\n                    bridalServiceList.add(bridalService)\r\n                }\r\n\r\n                when (bridalActivity) {\r\n                    is BridalActivity -> {\r\n                        bridalActivity.successBridalServiceListFromFireStore(bridalServiceList)\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (bridalActivity) {\r\n                    is BridalActivity -> {\r\n                        bridalActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n\r\n\r\n    }\r\n\r\n    fun getMakeupServiceList(makeupActivity: MakeUPActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.MAKEUP_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Service List\", document.documents.toString())\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val makeupServiceList: ArrayList<MakeupService> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document.documents) {\r\n                    val makeService = i.toObject(MakeupService::class.java)\r\n                    makeService!!.service_id = i.id\r\n                    makeupServiceList.add(makeService)\r\n                }\r\n\r\n                when (makeupActivity) {\r\n                    is MakeUPActivity -> {\r\n                        makeupActivity.successServiceListFromFireStore(makeupServiceList)\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (makeupActivity) {\r\n                    is MakeUPActivity -> {\r\n                        makeupActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n\r\n\r\n    }\r\n\r\n    fun getMassageList(massageActivity: MassageActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.MASSAGE_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Service List\", document.documents.toString())\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val massageServiceList: ArrayList<MassageService> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document.documents) {\r\n                    val massageService = i.toObject(MassageService::class.java)\r\n                    massageService!!.service_id = i.id\r\n                    massageServiceList.add(massageService)\r\n                }\r\n\r\n                when (massageActivity) {\r\n                    is MassageActivity -> {\r\n                        massageActivity.successMassageServiceListFromFireStore(massageServiceList)\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (massageActivity) {\r\n                    is MassageActivity -> {\r\n                        massageActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n    }\r\n\r\n    fun getNailServiceList(hairCareActivity: HairCareActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.HAIR_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Service List\", document.documents.toString())\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val serviceList: ArrayList<Service> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document.documents) {\r\n                    val service = i.toObject(Service::class.java)\r\n                    service!!.service_id = i.id\r\n                    serviceList.add(service)\r\n                }\r\n\r\n                when (hairCareActivity) {\r\n                    is HairCareActivity -> {\r\n                        hairCareActivity.successServiceListFromFireStore(serviceList)\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (hairCareActivity) {\r\n                    is HairCareActivity -> {\r\n                        hairCareActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n\r\n\r\n    }\r\n\r\n    fun getTatColorList(tatooAndColorActivity: TatooAndColorActivity) {\r\n        // The collection name for PRODUCTS\r\n        mFireStore.collection(Constants.TATCOLOUR_SERVICES)\r\n            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())\r\n            .get() // Will get the documents snapshots.\r\n            .addOnSuccessListener { document ->\r\n\r\n                // Here we get the list of boards in the form of documents.\r\n                Log.e(\"Service List\", document.documents.toString())\r\n\r\n                // Here we have created a new instance for Products ArrayList.\r\n                val tatColorserviceList: ArrayList<TatColorService> = ArrayList()\r\n\r\n                // A for loop as per the list of documents to convert them into Products ArrayList.\r\n                for (i in document.documents) {\r\n                    val tatService = i.toObject(TatColorService::class.java)\r\n                    tatService!!.service_id = i.id\r\n                    tatColorserviceList.add(tatService)\r\n                }\r\n\r\n                when (tatooAndColorActivity) {\r\n                    is TatooAndColorActivity -> {\r\n                        tatooAndColorActivity.successTatColorServiceListFromFireStore(\r\n                            tatColorserviceList\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            .addOnFailureListener { e ->\r\n                // Hide the progress dialog if there is any error based on the base class instance.\r\n                when (tatooAndColorActivity) {\r\n                    is TatooAndColorActivity -> {\r\n                        tatooAndColorActivity.hideProgressDialog()\r\n                    }\r\n                }\r\n                Log.e(\"Get service List\", \"Error while getting service list.\", e)\r\n            }\r\n\r\n\r\n    }\r\n\r\n    fun getgalleryItemsList(galleryFragment: GalleryFragment) {\r\n        // The collection name for PRODUCTS\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/firebase/FirestoreClass.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/firebase/FirestoreClass.kt	(date 1623151089658)
@@ -1,9 +1,13 @@
 package com.sklagat46.reylla.firebase
 
 import android.app.Activity
+import android.content.Context
 import android.util.Log
+import android.widget.Toast
 import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.firestore.EventListener
 import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.firestore.QuerySnapshot
 import com.google.firebase.firestore.SetOptions
 import com.sklagat46.reylla.activities.SignInActivity
 import com.sklagat46.reylla.activities.SignUpActivity
@@ -368,51 +372,66 @@
     }
 
 
-    fun getServiceList(hairCareActivity: HairCareActivity) {
+    fun getServiceList(context: Context, serviceName: String) {
         // The collection name for PRODUCTS
-        mFireStore.collection(Constants.HAIR_SERVICES)
-            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID())
-            .get() // Will get the documents snapshots.
-            .addOnSuccessListener { document ->
+        mFireStore.collection(serviceName)
+            .whereEqualTo(Constants.PROVIDER_ID, getCurrentUserID()).addSnapshotListener(EventListener { snapshots, e ->
+                if (e != null) {
+                    Toast.makeText(context, "Error $e", Toast.LENGTH_SHORT).show()
+                    when (context) {
+                        is HairCareActivity -> {
+                            context.hideProgressDialog()
+                        }
+                    }
+                    return@EventListener
+                }
 
-                // Here we get the list of boards in the form of documents.
-                Log.e("Service List", document.toString())
-                Log.e("Service List", document.documents.toString())
+                when (context) {
+                    is HairCareActivity -> {
+                        displayHairCareData(context, snapshots)
+                    }
+                    is BridalActivity -> {
+                        displayBridalData(context, snapshots)
+                    }
+                }
 
+            })
 
-                // Here we have created a new instance for Products ArrayList.
-                val serviceList: ArrayList<Service> = ArrayList()
-
-                // A for loop as per the list of documents to convert them into Products ArrayList.
-                for (i in document) {
-                    val service = i.toObject(Service::class.java)
-                    service!!.service_id = i.id
-                    serviceList.add(service)
-                    Log.e("Service List", document.documents.toString())
-
-//                    Log.d("UserDownload", "${document.id} => ${document.data}")
-//                    serviceList
-                }
-
-
-                when {
-                    else -> {
-                        hairCareActivity.successServiceListFromFireStore(serviceList)
-                    }
-                }
+    }
+
+    private fun displayHairCareData(
+        context: HairCareActivity,
+        snapshots: QuerySnapshot?, ) {
+        Log.d("service_1", "")
+        val serviceList: ArrayList<Service> = ArrayList()
+        if (snapshots != null) {
+            for (doc in snapshots) {
+                val service = doc.toObject(Service::class.java)
+                service!!.service_id = doc.id
+                serviceList.add(service)
+            }
+        }
+        context.hideProgressDialog()
+        context.successServiceListFromFireStore(serviceList)
+    }
+
+    private fun displayBridalData(
+        context: BridalActivity,
+        snapshots: QuerySnapshot?, ) {
+
+        Log.d("service_2", "")
+        val serviceList: ArrayList<BridalService> = ArrayList()
+        if (snapshots != null) {
+            for (doc in snapshots) {
+                val service = doc.toObject(BridalService::class.java)
+                service!!.service_id = doc.id
+                serviceList.add(service)
             }
-            .addOnFailureListener { e ->
-                // Hide the progress dialog if there is any error based on the base class instance.
-                when (hairCareActivity) {
-                    is HairCareActivity -> {
-                        hairCareActivity.hideProgressDialog()
-                    }
-                }
-                Log.e("Get service List", "Error while getting service list.", e)
-            }
+        }
+        context.hideProgressDialog()
+        context.successBridalServiceListFromFireStore(serviceList)
+    }
 
-
-    }
 
     fun getBridalServiceList(bridalActivity: BridalActivity) {
         // The collection name for PRODUCTS
Index: app/src/main/java/com/sklagat46/reylla/model/Service.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.model\r\n\r\nimport android.os.Parcel\r\nimport android.os.Parcelable\r\n\r\ndata class Service(\r\n    var provider_id: String,\r\n    var styleName: String,\r\n    var styleDuration: String,\r\n    var styleCost: String,\r\n    val mServiceImageURL: String,\r\n    var service_id: String = \"\",\r\n) : Parcelable {\r\n    constructor(source: Parcel) : this(\r\n        source.readString()!!,\r\n        source.readString()!!,\r\n        source.readString()!!,\r\n        source.readString()!!,\r\n        source.readString()!!,\r\n        source.readString()!!\r\n    )\r\n\r\n    override fun describeContents() = 0\r\n\r\n    override fun writeToParcel(dest: Parcel, flags: Int) = with(dest) {\r\n        writeString(provider_id)\r\n        writeString(styleName)\r\n        writeString(styleDuration)\r\n        writeString(styleCost)\r\n        writeString(mServiceImageURL)\r\n        writeString(service_id)\r\n    }\r\n\r\n    companion object {\r\n        @JvmField\r\n        val CREATOR: Parcelable.Creator<Service> = object : Parcelable.Creator<Service> {\r\n            override fun createFromParcel(source: Parcel): Service = Service(source)\r\n            override fun newArray(size: Int): Array<Service?> = arrayOfNulls(size)\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/model/Service.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/model/Service.kt	(date 1621885938000)
@@ -1,41 +1,10 @@
 package com.sklagat46.reylla.model
 
-import android.os.Parcel
-import android.os.Parcelable
-
 data class Service(
-    var provider_id: String,
-    var styleName: String,
-    var styleDuration: String,
-    var styleCost: String,
-    val mServiceImageURL: String,
+    var provider_id: String = "",
+    var styleName: String = "",
+    var styleDuration: String = "",
+    var styleCost: String = "",
+    val mserviceImageURL: String = "",
     var service_id: String = "",
-) : Parcelable {
-    constructor(source: Parcel) : this(
-        source.readString()!!,
-        source.readString()!!,
-        source.readString()!!,
-        source.readString()!!,
-        source.readString()!!,
-        source.readString()!!
-    )
-
-    override fun describeContents() = 0
-
-    override fun writeToParcel(dest: Parcel, flags: Int) = with(dest) {
-        writeString(provider_id)
-        writeString(styleName)
-        writeString(styleDuration)
-        writeString(styleCost)
-        writeString(mServiceImageURL)
-        writeString(service_id)
-    }
-
-    companion object {
-        @JvmField
-        val CREATOR: Parcelable.Creator<Service> = object : Parcelable.Creator<Service> {
-            override fun createFromParcel(source: Parcel): Service = Service(source)
-            override fun newArray(size: Int): Array<Service?> = arrayOfNulls(size)
-        }
-    }
-}
+)
Index: app/src/main/java/com/sklagat46/reylla/model/HairCareServiceModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.model\r\n\r\nclass HairCareServiceModel {\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/model/HairCareServiceModel.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/model/HairCareServiceModel.kt	(date 1621885938000)
@@ -1,4 +1,11 @@
 package com.sklagat46.reylla.model
 
 class HairCareServiceModel {
-}
\ No newline at end of file
+    var provider_id: String = ""
+    var styleName: String = ""
+    var styleDuration: String = ""
+    var styleCost: String = ""
+    val mserviceImageURL: String = ""
+    var service_id: String = ""
+}
+
Index: app/src/main/java/com/sklagat46/reylla/model/BridalService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.model\r\n\r\nimport android.os.Parcelable\r\nimport kotlinx.android.parcel.Parcelize\r\n\r\n@Parcelize\r\ndata class BridalService(\r\n\r\n    val providerID: String,\r\n    var styleName: String,\r\n    var styleDuration: String,\r\n    var styleCost: String,\r\n    val mServiceImageURL: String,\r\n    var service_id: String = \"\",\r\n\r\n\r\n    ) : Parcelable
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/model/BridalService.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/model/BridalService.kt	(date 1621885938000)
@@ -1,17 +1,12 @@
 package com.sklagat46.reylla.model
 
-import android.os.Parcelable
-import kotlinx.android.parcel.Parcelize
+import com.sklagat46.reylla.utils.Constants
 
-@Parcelize
 data class BridalService(
-
-    val providerID: String,
-    var styleName: String,
-    var styleDuration: String,
-    var styleCost: String,
-    val mServiceImageURL: String,
+    var providerID: String = Constants.EMPTY_STRING,
+    var styleName: String = Constants.EMPTY_STRING,
+    var styleDuration: String = Constants.EMPTY_STRING,
+    var styleCost: String = Constants.EMPTY_STRING,
+    val mServiceImageURL: String = Constants.EMPTY_STRING,
     var service_id: String = "",
-
-
-    ) : Parcelable
\ No newline at end of file
+)
\ No newline at end of file
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectCodeStyleConfiguration\">\r\n  <code_scheme name=\"Project\" version=\"173\">\r\n    <JetCodeStyleSettings>\r\n      <option name=\"PACKAGES_TO_USE_STAR_IMPORTS\">\r\n        <value>\r\n          <package name=\"java.util\" alias=\"false\" withSubpackages=\"false\" />\r\n          <package name=\"kotlinx.android.synthetic\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"io.ktor\" alias=\"false\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"PACKAGES_IMPORT_LAYOUT\">\r\n        <value>\r\n          <package name=\"\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"java\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"javax\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"kotlin\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"\" alias=\"true\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\r\n    </JetCodeStyleSettings>\r\n    <codeStyleSettings language=\"XML\">\r\n      <indentOptions>\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"4\" />\r\n      </indentOptions>\r\n      <arrangement>\r\n        <rules>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:android</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:id</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>style</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>ANDROID_ATTRIBUTE_ORDER</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>.*</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n        </rules>\r\n      </arrangement>\r\n    </codeStyleSettings>\r\n    <codeStyleSettings language=\"kotlin\">\r\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\r\n    </codeStyleSettings>\r\n  </code_scheme>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ .idea/codeStyles/Project.xml	(date 1621885938000)
@@ -3,18 +3,9 @@
     <JetCodeStyleSettings>
       <option name="PACKAGES_TO_USE_STAR_IMPORTS">
         <value>
-          <package name="java.util" alias="false" withSubpackages="false" />
-          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
-          <package name="io.ktor" alias="false" withSubpackages="true" />
-        </value>
-      </option>
-      <option name="PACKAGES_IMPORT_LAYOUT">
-        <value>
-          <package name="" alias="false" withSubpackages="true" />
-          <package name="java" alias="false" withSubpackages="true" />
-          <package name="javax" alias="false" withSubpackages="true" />
-          <package name="kotlin" alias="false" withSubpackages="true" />
-          <package name="" alias="true" withSubpackages="true" />
+          <package name="java.util" withSubpackages="false" static="false" />
+          <package name="kotlinx.android.synthetic" withSubpackages="true" static="false" />
+          <package name="io.ktor" withSubpackages="true" static="false" />
         </value>
       </option>
       <option name="CODE_STYLE_DEFAULTS" value="KOTLIN_OFFICIAL" />
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.jakewharton.butterknife'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n\r\n    defaultConfig {\r\n        applicationId \"com.sklagat46.reylla\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n        vectorDrawables.useSupportLibrary = true // This line here\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility 1.8\r\n        targetCompatibility 1.8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\r\n    implementation 'androidx.core:core-ktx:1.3.2'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.3'\r\n    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'\r\n    testImplementation 'junit:junit:4.13.2'\r\n\r\n    implementation 'com.jakewharton:butterknife:10.2.3'\r\n    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'\r\n\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n\r\n//    firebase\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n    implementation 'com.google.firebase:firebase-auth:20.0.4'\r\n    implementation 'com.google.firebase:firebase-firestore:22.1.2'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n    implementation 'com.google.firebase:firebase-messaging:21.1.0'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    //circle image view\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n\r\n    //staggered recycler view\r\n    implementation 'com.makeramen:roundedimageview:2.3.0'\r\n    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'\r\n    implementation 'com.karumi:dexter:6.0.1'\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/build.gradle	(date 1622104802000)
@@ -6,12 +6,12 @@
 apply plugin: 'com.jakewharton.butterknife'
 
 android {
-    compileSdkVersion 29
+    compileSdkVersion 30
 
     defaultConfig {
         applicationId "com.sklagat46.reylla"
         minSdkVersion 21
-        targetSdkVersion 29
+        targetSdkVersion 30
         versionCode 1
         versionName "1.0"
         multiDexEnabled true
@@ -37,11 +37,11 @@
 dependencies {
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
-    implementation 'androidx.core:core-ktx:1.3.2'
-    implementation 'androidx.appcompat:appcompat:1.2.0'
+    implementation 'androidx.core:core-ktx:1.5.0'
+    implementation 'androidx.appcompat:appcompat:1.3.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
-    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'
-    implementation 'com.google.firebase:firebase-analytics:18.0.3'
+    implementation 'com.google.firebase:firebase-crashlytics:18.0.0'
+    implementation 'com.google.firebase:firebase-analytics:19.0.0'
     implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
     implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
     implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
@@ -60,11 +60,13 @@
 
 //    firebase
     implementation platform('com.google.firebase:firebase-bom:25.12.0')
-    implementation 'com.google.firebase:firebase-auth:20.0.4'
-    implementation 'com.google.firebase:firebase-firestore:22.1.2'
-    implementation 'com.google.firebase:firebase-storage:19.2.2'
-    implementation 'com.google.firebase:firebase-messaging:21.1.0'
+    implementation 'com.google.firebase:firebase-auth:21.0.1'
+    implementation 'com.google.firebase:firebase-firestore:23.0.0'
+    implementation 'com.google.firebase:firebase-storage:20.0.0'
+    implementation 'com.google.firebase:firebase-messaging:22.0.0'
     implementation 'com.google.android.gms:play-services-auth:19.0.0'
+    // FirebaseUI for Cloud Firestore
+    implementation 'com.firebaseui:firebase-ui-firestore:7.1.1'
     //circle image view
     implementation 'de.hdodenhof:circleimageview:3.1.0'
 
Index: app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/BridalActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.activities.serviceproviders\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.sklagat46.reylla.R\r\nimport com.sklagat46.reylla.activities.BaseActivity\r\nimport com.sklagat46.reylla.activities.serviceproviders.addingNewService.AddBridalServiceActivity\r\nimport com.sklagat46.reylla.adapter.providersAdapters.BridalServiceAdapter\r\nimport com.sklagat46.reylla.firebase.FirestoreClass\r\nimport com.sklagat46.reylla.model.BridalService\r\nimport kotlinx.android.synthetic.main.activity_bridal.*\r\nimport java.util.*\r\n\r\nclass BridalActivity : BaseActivity() {\r\n\r\n    val mFireStore = FirebaseFirestore.getInstance()\r\n    private lateinit var mRootView: View\r\n    private val currentUser = FirebaseAuth.getInstance().currentUser!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_bridal)\r\n        getBridalServiceListFromFirestoreDB()\r\n\r\n        fab_add_bridal_care.setOnClickListener {\r\n\r\n            val addBridalServiceIntent =\r\n                Intent(this@BridalActivity, AddBridalServiceActivity::class.java)\r\n            startActivityForResult(\r\n                addBridalServiceIntent, ADD_SERVICE_ACTIVITY_REQUEST_CODE\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        getBridalServiceListFromFirestoreDB()\r\n    }\r\n\r\n    private fun getBridalServiceListFromFirestoreDB() {\r\n\r\n        showProgressDialog(resources.getString(R.string.please_wait))\r\n\r\n        // Call the function of Firestore class.\r\n        FirestoreClass().getBridalServiceList(this@BridalActivity)\r\n    }\r\n\r\n    /**\r\n     * A function for getting the user id of current logged user.\r\n     */\r\n    override fun getCurrentUserID(): String {\r\n        // TODO (Step 1: Return the user id if he is already logged in before or else it will be blank.)\r\n        // START\r\n        // An Instance of currentUser using FirebaseAuth\r\n        val currentUser = FirebaseAuth.getInstance().currentUser\r\n\r\n        // A variable to assign the currentUserId if it is not null or else it will be blank.\r\n        var currentUserID = \"\"\r\n        if (currentUser != null) {\r\n            currentUserID = currentUser.uid\r\n        }\r\n\r\n        return currentUserID\r\n        // END\r\n    }\r\n\r\n\r\n    fun successBridalServiceListFromFireStore(bridalServiceList: ArrayList<BridalService>) {\r\n        // Hide Progress dialog.\r\n        hideProgressDialog()\r\n\r\n        if (bridalServiceList.size > 0) {\r\n            rv_bridal_care_list.visibility = View.VISIBLE\r\n            tv_no_records_available.visibility = View.GONE\r\n\r\n            rv_bridal_care_list.layoutManager = LinearLayoutManager(this)\r\n            rv_bridal_care_list.setHasFixedSize(true)\r\n\r\n            val adapterService =\r\n                BridalServiceAdapter(applicationContext, bridalServiceList, this@BridalActivity)\r\n            rv_bridal_care_list.adapter = adapterService\r\n        } else {\r\n            rv_bridal_care_list.visibility = View.GONE\r\n            tv_no_records_available.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    companion object {\r\n        private const val ADD_SERVICE_ACTIVITY_REQUEST_CODE = 1\r\n        internal const val EXTRA_PLACE_DETAILS = \"extra_place_details\"\r\n    }\r\n\r\n    /**\r\n     * A function to show the alert dialog for the confirmation of delete product from cloud firestore.\r\n     */\r\n    private fun showAlertDialogToDeleteService(serviceID: String) {\r\n\r\n        val builder = AlertDialog.Builder(applicationContext)\r\n        //set title for alert dialog\r\n        builder.setTitle(\"Delete Item\")\r\n        //set message for alert dialog\r\n        builder.setMessage(\"Are you sure you want to delete\")\r\n        builder.setIcon(android.R.drawable.ic_dialog_alert)\r\n\r\n        //performing positive action\r\n        builder.setPositiveButton(resources.getString(R.string.yes)) { dialogInterface, _ ->\r\n\r\n            // Show the progress dialog.\r\n            showProgressDialog(resources.getString(R.string.please_wait))\r\n\r\n            // Call the function of Firestore class.\r\n            FirestoreClass().deleteService(this@BridalActivity, serviceID)\r\n\r\n            dialogInterface.dismiss()\r\n        }\r\n\r\n        //performing negative action\r\n        builder.setNegativeButton(resources.getString(R.string.no)) { dialogInterface, _ ->\r\n\r\n            dialogInterface.dismiss()\r\n        }\r\n        // Create the AlertDialog\r\n        val alertDialog: AlertDialog = builder.create()\r\n        // Set other dialog properties\r\n        alertDialog.setCancelable(false)\r\n        alertDialog.show()\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/BridalActivity.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/BridalActivity.kt	(date 1621885938000)
@@ -13,6 +13,7 @@
 import com.sklagat46.reylla.adapter.providersAdapters.BridalServiceAdapter
 import com.sklagat46.reylla.firebase.FirestoreClass
 import com.sklagat46.reylla.model.BridalService
+import com.sklagat46.reylla.utils.Constants
 import kotlinx.android.synthetic.main.activity_bridal.*
 import java.util.*
 
@@ -50,7 +51,8 @@
         showProgressDialog(resources.getString(R.string.please_wait))
 
         // Call the function of Firestore class.
-        FirestoreClass().getBridalServiceList(this@BridalActivity)
+        FirestoreClass().getServiceList(this@BridalActivity, Constants.BRIDAL_SERVICES)
+        hideProgressDialog()
     }
 
     /**
@@ -77,7 +79,7 @@
         // Hide Progress dialog.
         hideProgressDialog()
 
-        if (bridalServiceList.size > 0) {
+        if (bridalServiceList.isNotEmpty()) {
             rv_bridal_care_list.visibility = View.VISIBLE
             tv_no_records_available.visibility = View.GONE
 
@@ -85,7 +87,7 @@
             rv_bridal_care_list.setHasFixedSize(true)
 
             val adapterService =
-                BridalServiceAdapter(applicationContext, bridalServiceList, this@BridalActivity)
+                BridalServiceAdapter(this, bridalServiceList)
             rv_bridal_care_list.adapter = adapterService
         } else {
             rv_bridal_care_list.visibility = View.GONE
Index: app/src/main/java/com/sklagat46/reylla/utils/Constants.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.utils\r\n\r\nimport android.app.Activity\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.provider.MediaStore\r\nimport android.webkit.MimeTypeMap\r\n\r\nobject Constants {\r\n\r\n    // Firebase Constants\r\n    // This  is used for the collection name for USERS.\r\n    const val USERS: String = \"users\"\r\n    const val CUSTOMERS: String = \"customers\"\r\n    const val COMPANIES: String = \"companies\"\r\n    const val INDIVIDUALPROVIDERS: String = \"individualProviders\"\r\n    const val HAIR_SERVICES: String = \"hairServices\"\r\n    const val HAIR_STYLE_NAME: String = \"hairStyleName\"\r\n    const val BRIDAL_SERVICES: String = \"bridalServices\"\r\n    const val NAIL_SERVICES: String = \"nailServices\"\r\n    const val MAKEUP_SERVICES: String = \"makeupServices\"\r\n    const val MASSAGE_SERVICES: String = \"massageService\"\r\n\r\n    const val SERVICE: String = \"service\"\r\n\r\n\r\n    const val PROVIDER_ID: String = \"provider_id\"\r\n    const val TATCOLOUR_SERVICES: String = \"tatcolourService\"\r\n\r\n    // Intent extra constants.\r\n    const val EXTRA_USER_DETAILS: String = \"extra_user_details\"\r\n\r\n    const val EXTRA_SERVICE_ID: String = \"extra_service_id\"\r\n    const val EXTRA_SERVICE_OWNER_ID: String = \"extra_service_owner_id\"\r\n\r\n\r\n    const val SERVICE_IMAGE: String = \"Service_Image\"\r\n\r\n\r\n    // Firebase database field names\r\n    const val IMAGE: String = \"image\"\r\n    const val NAME: String = \"name\"\r\n    const val MOBILE: String = \"mobile\"\r\n    const val ASSIGNED_TO: String = \"assignedTo\"\r\n    const val DOCUMENT_ID: String = \"documentId\"\r\n    const val TASK_LIST: String = \"taskList\"\r\n    const val ID: String = \"id\"\r\n    const val EMAIL: String = \"email\"\r\n\r\n    //A unique code for asking the Read Storage Permission using this we will be check and identify in the method onRequestPermissionsResult\r\n    const val READ_STORAGE_PERMISSION_CODE = 1\r\n    // A unique code of image selection from Phone Storage.\r\n    const val PICK_IMAGE_REQUEST_CODE = 2\r\n\r\n    const val REYLLA_PREFERENCES: String = \"ReyllaPrefs\"\r\n    const val FCM_TOKEN:String = \"fcmToken\"\r\n    const val FCM_TOKEN_UPDATED:String = \"fcmTokenUpdated\"\r\n\r\n    // TODO (Step 1: Add the base url  and key params for sending firebase notification.)\r\n    // START\r\n    const val FCM_BASE_URL:String = \"https://fcm.googleapis.com/fcm/send\"\r\n    const val FCM_AUTHORIZATION:String = \"authorization\"\r\n    const val FCM_KEY:String = \"key\"\r\n//    const val FCM_SERVER_KEY:String = \"AAAA-oftC-Q:APA91bFbmaYmj3lu_Oy3vwYkqh0tHjFNFanTjYIR-ilKo1SsoQHF8ODMiOzZg3JZAAfYGdOdaM_kBRRyM5IfXbaXq0phVHnUFrG35TWnxfJgK6ysrwqBYdoP-WPWAEjwQn1eeA7Sv1CC\"\r\n    const val FCM_KEY_TITLE:String = \"title\"\r\n    const val FCM_KEY_MESSAGE:String = \"message\"\r\n    const val FCM_KEY_DATA:String = \"data\"\r\n    const val FCM_KEY_TO:String = \"to\"\r\n// END\r\n\r\n\r\n\r\n    /**\r\n     * A function for user profile image selection from phone storage.\r\n     */\r\n    fun showImageChooser(activity: Activity) {\r\n        // An intent for launching the image selection of phone storage.\r\n        val galleryIntent = Intent(\r\n            Intent.ACTION_PICK,\r\n            MediaStore.Images.Media.EXTERNAL_CONTENT_URI\r\n        )\r\n        // Launches the image selection of phone storage using the constant code.\r\n        activity.startActivityForResult(galleryIntent, PICK_IMAGE_REQUEST_CODE)\r\n    }\r\n\r\n    /**\r\n     * A function to get the image file extension of the selected image.\r\n     *\r\n     * @param activity Activity reference.\r\n     * @param uri Image file uri.\r\n     */\r\n    fun getFileExtension(activity: Activity, uri: Uri?): String? {\r\n        /*\r\n         * MimeTypeMap: Two-way map that maps MIME-types to file extensions and vice versa.\r\n         *\r\n         * getSingleton(): Get the singleton instance of MimeTypeMap.\r\n         *\r\n         * getExtensionFromMimeType: Return the registered extension for the given MIME type.\r\n         *\r\n         * contentResolver.getType: Return the MIME type of the given content URL.\r\n         */\r\n        return MimeTypeMap.getSingleton()\r\n            .getExtensionFromMimeType(activity.contentResolver.getType(uri!!))\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/utils/Constants.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/utils/Constants.kt	(date 1621885938000)
@@ -10,6 +10,7 @@
 
     // Firebase Constants
     // This  is used for the collection name for USERS.
+    const val EMPTY_STRING: String = ""
     const val USERS: String = "users"
     const val CUSTOMERS: String = "customers"
     const val COMPANIES: String = "companies"
Index: app/src/main/res/layout/activity_service_providers_main_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/container\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingTop=\"?attr/actionBarSize\">\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"0dp\"\r\n        android:layout_marginEnd=\"0dp\"\r\n        android:background=\"?android:attr/windowBackground\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:menu=\"@menu/bottom_nav_menu\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/nav_host_fragment\"\r\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:defaultNavHost=\"true\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/nav_view\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:navGraph=\"@navigation/mobile_navigation\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_service_providers_main_page.xml	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/res/layout/activity_service_providers_main_page.xml	(date 1621885938000)
@@ -3,8 +3,7 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/container"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingTop="?attr/actionBarSize">
+    android:layout_height="match_parent">
 
     <com.google.android.material.bottomnavigation.BottomNavigationView
         android:id="@+id/nav_view"
Index: app/src/main/java/com/sklagat46/reylla/utils/Util.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/utils/Util.kt	(date 1621885938000)
+++ app/src/main/java/com/sklagat46/reylla/utils/Util.kt	(date 1621885938000)
@@ -0,0 +1,23 @@
+package com.sklagat46.reylla.utils
+
+import android.content.Context
+import androidx.recyclerview.widget.DefaultItemAnimator
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+
+object Util {
+
+    fun setRecyclerView(
+        context: Context?,
+        recyclerView: RecyclerView
+    ) {
+        val mLayoutManager =
+            LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false)
+        recyclerView.layoutManager = mLayoutManager
+        recyclerView.itemAnimator = DefaultItemAnimator()
+        /* recyclerView.addItemDecoration(
+             DividerItemDecoration(context, DividerItemDecoration.VERTICAL)
+         )*/
+    }
+
+}
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Wed Nov 18 15:50:13 EAT 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1622106244000)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-bin.zip
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    ext.kotlin_version = \"1.4.31\"\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.3'\r\n        classpath 'com.google.gms:google-services:4.3.5'\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.1'\r\n        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ build.gradle	(date 1622106246000)
@@ -1,16 +1,16 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
-    ext.kotlin_version = "1.4.31"
+    ext.kotlin_version = "1.5.0"
     repositories {
         google()
         jcenter()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.3'
-        classpath 'com.google.gms:google-services:4.3.5'
+        classpath 'com.android.tools.build:gradle:4.2.0'
+        classpath 'com.google.gms:google-services:4.3.8'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
-        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.5.1'
+        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.6.1'
         classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: app/src/main/res/layout/row_list_service_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"@drawable/gray_border_shape_rounded\"\r\n    android:clickable=\"true\"\r\n    android:focusable=\"true\"\r\n    android:layout_marginTop=\"5dp\"\r\n    card_view:cardCornerRadius=\"4dp\"\r\n    card_view:cardElevation=\"4dp\">\r\n\r\n    <androidx.constraintlayout.utils.widget.ImageFilterView\r\n        android:id=\"@+id/iv_item_service_image\"\r\n        android:layout_width=\"70dp\"\r\n        android:layout_height=\"70dp\"\r\n        android:layout_margin=\"15dp\"\r\n        tools:src=\"@tools:sample/avatars\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"295dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"#00555555\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_item_service_name\"\r\n            android:layout_width=\"122dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:textColor=\"#000\"\r\n            android:textSize=\"18sp\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\"\r\n            card_view:layout_constraintHorizontal_bias=\"0.041\"\r\n            card_view:layout_constraintStart_toStartOf=\"parent\"\r\n            card_view:layout_constraintTop_toTopOf=\"parent\"\r\n            card_view:layout_constraintVertical_bias=\"0.106\"\r\n            tools:text=\"Service Name\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_service_name\"\r\n            android:layout_width=\"60dp\"\r\n            android:layout_height=\"23dp\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:textColor=\"#000\"\r\n            android:textSize=\"16sp\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\"\r\n            card_view:layout_constraintHorizontal_bias=\"0.041\"\r\n            card_view:layout_constraintStart_toStartOf=\"parent\"\r\n            card_view:layout_constraintTop_toBottomOf=\"@+id/tv_item_service_name\"\r\n            card_view:layout_constraintVertical_bias=\"0.0\"\r\n            tools:text=\"Duration: \" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_item_duration\"\r\n            android:layout_width=\"50dp\"\r\n            android:layout_height=\"25dp\"\r\n            android:layout_marginEnd=\"164dp\"\r\n            android:textColor=\"@color/colorPrimary\"\r\n            android:textSize=\"14sp\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\"\r\n            card_view:layout_constraintHorizontal_bias=\"0.833\"\r\n            card_view:layout_constraintStart_toEndOf=\"@+id/tv_service_name\"\r\n            card_view:layout_constraintTop_toBottomOf=\"@+id/tv_item_service_name\"\r\n            card_view:layout_constraintVertical_bias=\"0.208\"\r\n            tools:text=\"2hrs\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_ksh\"\r\n            android:layout_width=\"33dp\"\r\n            android:layout_height=\"26dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:textColor=\"#000\"\r\n            android:textSize=\"16sp\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\"\r\n            card_view:layout_constraintHorizontal_bias=\"0.032\"\r\n            card_view:layout_constraintStart_toStartOf=\"parent\"\r\n            card_view:layout_constraintTop_toBottomOf=\"@+id/tv_item_duration\"\r\n            card_view:layout_constraintVertical_bias=\"0.375\"\r\n            tools:text=\"Ksh: \" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_item_cost\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textColor=\"#000\"\r\n            android:textSize=\"14sp\"\r\n            android:inputType=\"number\"\r\n            android:hint=\"1200\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\"\r\n            card_view:layout_constraintHorizontal_bias=\"0.0\"\r\n            card_view:layout_constraintStart_toEndOf=\"@+id/tv_ksh\"\r\n            card_view:layout_constraintTop_toBottomOf=\"@+id/et_item_color\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatImageView\r\n            android:id=\"@+id/iv_item_delete\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginEnd=\"4dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:src=\"@drawable/ic_baseline_delete_24\"\r\n            card_view:layout_constraintBottom_toBottomOf=\"parent\"\r\n            card_view:layout_constraintEnd_toEndOf=\"parent\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/row_list_service_item.xml	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/res/layout/row_list_service_item.xml	(date 1621885938000)
@@ -11,7 +11,7 @@
     card_view:cardCornerRadius="4dp"
     card_view:cardElevation="4dp">
 
-    <androidx.constraintlayout.utils.widget.ImageFilterView
+    <ImageView
         android:id="@+id/iv_item_service_image"
         android:layout_width="70dp"
         android:layout_height="70dp"
@@ -51,7 +51,7 @@
             card_view:layout_constraintStart_toStartOf="parent"
             card_view:layout_constraintTop_toBottomOf="@+id/tv_item_service_name"
             card_view:layout_constraintVertical_bias="0.0"
-            tools:text="Duration: " />
+            android:text="Duration: " />
 
         <TextView
             android:id="@+id/tv_item_duration"
@@ -81,7 +81,7 @@
             card_view:layout_constraintStart_toStartOf="parent"
             card_view:layout_constraintTop_toBottomOf="@+id/tv_item_duration"
             card_view:layout_constraintVertical_bias="0.375"
-            tools:text="Ksh: " />
+            android:text="Ksh " />
 
         <TextView
             android:id="@+id/tv_item_cost"
@@ -89,6 +89,7 @@
             android:layout_height="wrap_content"
             android:textColor="#000"
             android:textSize="14sp"
+            android:layout_marginStart="2dp"
             android:inputType="number"
             android:hint="1200"
             card_view:layout_constraintBottom_toBottomOf="parent"
Index: app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/BridalServiceAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.adapter.providersAdapters\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.sklagat46.reylla.R\r\nimport com.sklagat46.reylla.activities.serviceproviders.BridalActivity\r\nimport com.sklagat46.reylla.activities.serviceproviders.ui.details.ServiceDetailsActivity\r\nimport com.sklagat46.reylla.model.BridalService\r\nimport com.sklagat46.reylla.utils.Constants\r\nimport com.sklagat46.reylla.utils.GlideLoader\r\nimport kotlinx.android.synthetic.main.row_list_service_item.view.*\r\n\r\nclass BridalServiceAdapter(\r\n    private val context: Context,\r\n    private var list: ArrayList<BridalService>,\r\n    private val activity: BridalActivity\r\n) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int):\r\n            RecyclerView.ViewHolder {\r\n        return BridalViewHolder(\r\n            LayoutInflater.from(context).inflate(\r\n                R.layout.row_list_service_item,\r\n                parent,\r\n                false\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n        val model = list[position]\r\n\r\n        if (holder is BridalViewHolder) {\r\n\r\n            GlideLoader(context).loadServicePicture(\r\n                model.mServiceImageURL,\r\n                holder.itemView.iv_item_service_image\r\n            )\r\n\r\n            holder.itemView.tv_item_service_name.text = model.styleName\r\n            holder.itemView.tv_item_duration.text = model.styleDuration\r\n\r\n            holder.itemView.tv_item_cost.text = \"Ksh\" + \"$${model.styleCost}\"\r\n\r\n//            holder.itemView.iv_item_delete.setOnClickListener {\r\n//\r\n//                activity.deleteService(model.service_id)\r\n//            }\r\n\r\n            holder.itemView.setOnClickListener {\r\n                // Launch Product details screen.\r\n                val intent = Intent(context, ServiceDetailsActivity::class.java)\r\n                intent.putExtra(Constants.EXTRA_SERVICE_ID, model.service_id)\r\n                intent.putExtra(Constants.EXTRA_SERVICE_OWNER_ID, model.providerID)\r\n                context.startActivity(intent)\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return list.size\r\n    }\r\n\r\n    class BridalViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/BridalServiceAdapter.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/BridalServiceAdapter.kt	(date 1623151078502)
@@ -7,7 +7,6 @@
 import android.view.ViewGroup
 import androidx.recyclerview.widget.RecyclerView
 import com.sklagat46.reylla.R
-import com.sklagat46.reylla.activities.serviceproviders.BridalActivity
 import com.sklagat46.reylla.activities.serviceproviders.ui.details.ServiceDetailsActivity
 import com.sklagat46.reylla.model.BridalService
 import com.sklagat46.reylla.utils.Constants
@@ -16,12 +15,15 @@
 
 class BridalServiceAdapter(
     private val context: Context,
-    private var list: ArrayList<BridalService>,
-    private val activity: BridalActivity
+    private var list: ArrayList<BridalService>
 ) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {
 
+<<<<<<< HEAD:app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/BridalServiceAdapter.kt
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int):
             RecyclerView.ViewHolder {
+=======
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
+>>>>>>> 6b99d48b5fc26a2d67ac3db843f2c2f4a4e77d68:app/src/main/java/com/sklagat46/reylla/adapter/BridalServiceAdapter.kt
         return BridalViewHolder(
             LayoutInflater.from(context).inflate(
                 R.layout.row_list_service_item,
Index: app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/HairCareActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.activities.serviceproviders\r\n\r\nimport android.app.AlertDialog\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.sklagat46.reylla.R\r\nimport com.sklagat46.reylla.activities.BaseActivity\r\nimport com.sklagat46.reylla.activities.serviceproviders.addingNewService.AddHairServiceActivity\r\nimport com.sklagat46.reylla.adapter.providersAdapters.HairCareServiceAdapter\r\nimport com.sklagat46.reylla.firebase.FirestoreClass\r\nimport com.sklagat46.reylla.model.Service\r\nimport kotlinx.android.synthetic.main.activity_hair_care.*\r\n\r\nclass HairCareActivity : BaseActivity() {\r\n\r\n    val mFireStore = FirebaseFirestore.getInstance()\r\n    private lateinit var mRootView: View\r\n\r\n    private val currentUser = FirebaseAuth.getInstance().currentUser!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_hair_care)\r\n        getServiceListFromFirestoreDB()\r\n        // Click event for add hair service button.\r\n        fab_add_hair_care.setOnClickListener {\r\n            val addHairServiceIntent =\r\n                Intent(this@HairCareActivity, AddHairServiceActivity::class.java)\r\n            startActivityForResult(addHairServiceIntent, ADD_SERVICE_ACTIVITY_REQUEST_CODE)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    companion object {\r\n        private const val ADD_SERVICE_ACTIVITY_REQUEST_CODE = 1\r\n        internal const val EXTRA_PLACE_DETAILS = \"extra_place_details\"\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        getServiceListFromFirestoreDB()\r\n    }\r\n\r\n    private fun getServiceListFromFirestoreDB() {\r\n\r\n        showProgressDialog(resources.getString(R.string.please_wait))\r\n\r\n        // Call the function of Firestore class.\r\n        FirestoreClass().getServiceList(this@HairCareActivity)\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * A function to get the successful product list from cloud firestore.\r\n     *\r\n     * @param productsList Will receive the product list from cloud firestore.\r\n     */\r\n    fun successServiceListFromFireStore(serviceList: ArrayList<Service>) {\r\n\r\n        // Hide Progress dialog.\r\n        hideProgressDialog()\r\n\r\n        if (serviceList.size > 0) {\r\n            rv_hair_care_list.visibility = View.VISIBLE\r\n            tv_no_records_available.visibility = View.GONE\r\n\r\n            rv_hair_care_list.layoutManager = LinearLayoutManager(this)\r\n            rv_hair_care_list.setHasFixedSize(true)\r\n\r\n            val adapterService =\r\n                HairCareServiceAdapter(applicationContext, serviceList, this@HairCareActivity)\r\n            rv_hair_care_list.adapter = adapterService\r\n        } else {\r\n            rv_hair_care_list.visibility = View.GONE\r\n            tv_no_records_available.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function for getting the user id of current logged user.\r\n     */\r\n    override fun getCurrentUserID(): String {\r\n        // TODO (Step 1: Return the user id if he is already logged in before or else it will be blank.)\r\n        // START\r\n        // An Instance of currentUser using FirebaseAuth\r\n        val currentUser = FirebaseAuth.getInstance().currentUser\r\n\r\n        // A variable to assign the currentUserId if it is not null or else it will be blank.\r\n        var currentUserID = \"\"\r\n        if (currentUser != null) {\r\n            currentUserID = currentUser.uid\r\n        }\r\n\r\n        return currentUserID\r\n        // END\r\n    }\r\n\r\n    fun deleteService(serviceID: String) {\r\n        showAlertDialogToDeleteProduct(serviceID)\r\n\r\n    }\r\n\r\n    /**\r\n     * A function to show the alert dialog for the confirmation of delete product from cloud firestore.\r\n     */\r\n    private fun showAlertDialogToDeleteProduct(serviceID: String) {\r\n\r\n        val builder = AlertDialog.Builder(applicationContext)\r\n        //set title for alert dialog\r\n        builder.setTitle(\"Delete Item\")\r\n        //set message for alert dialog\r\n        builder.setMessage(\"Are you sure you want to delete\")\r\n        builder.setIcon(android.R.drawable.ic_dialog_alert)\r\n\r\n        //performing positive action\r\n        builder.setPositiveButton(resources.getString(R.string.yes)) { dialogInterface, _ ->\r\n\r\n            // Show the progress dialog.\r\n            showProgressDialog(resources.getString(R.string.please_wait))\r\n\r\n            // Call the function of Firestore class.\r\n            FirestoreClass().deleteService(this@HairCareActivity, serviceID)\r\n\r\n            dialogInterface.dismiss()\r\n        }\r\n\r\n        //performing negative action\r\n        builder.setNegativeButton(resources.getString(R.string.no)) { dialogInterface, _ ->\r\n\r\n            dialogInterface.dismiss()\r\n        }\r\n        // Create the AlertDialog\r\n        val alertDialog: AlertDialog = builder.create()\r\n        // Set other dialog properties\r\n        alertDialog.setCancelable(false)\r\n        alertDialog.show()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/HairCareActivity.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/activities/serviceproviders/HairCareActivity.kt	(date 1621885938000)
@@ -4,7 +4,6 @@
 import android.content.Intent
 import android.os.Bundle
 import android.view.View
-import androidx.recyclerview.widget.LinearLayoutManager
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.firestore.FirebaseFirestore
 import com.sklagat46.reylla.R
@@ -13,11 +12,14 @@
 import com.sklagat46.reylla.adapter.providersAdapters.HairCareServiceAdapter
 import com.sklagat46.reylla.firebase.FirestoreClass
 import com.sklagat46.reylla.model.Service
+import com.sklagat46.reylla.utils.Constants
+import com.sklagat46.reylla.utils.Util
 import kotlinx.android.synthetic.main.activity_hair_care.*
 
+
 class HairCareActivity : BaseActivity() {
 
-    val mFireStore = FirebaseFirestore.getInstance()
+    private val mFireStore = FirebaseFirestore.getInstance()
     private lateinit var mRootView: View
 
     private val currentUser = FirebaseAuth.getInstance().currentUser!!
@@ -26,6 +28,7 @@
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_hair_care)
         getServiceListFromFirestoreDB()
+        Util.setRecyclerView(this, rv_hair_care_list)
         // Click event for add hair service button.
         fab_add_hair_care.setOnClickListener {
             val addHairServiceIntent =
@@ -42,19 +45,12 @@
         internal const val EXTRA_PLACE_DETAILS = "extra_place_details"
     }
 
-    override fun onResume() {
-        super.onResume()
-
-        getServiceListFromFirestoreDB()
-    }
 
     private fun getServiceListFromFirestoreDB() {
-
         showProgressDialog(resources.getString(R.string.please_wait))
-
         // Call the function of Firestore class.
-        FirestoreClass().getServiceList(this@HairCareActivity)
-
+        FirestoreClass().getServiceList(this@HairCareActivity, Constants.HAIR_SERVICES)
+        hideProgressDialog()
     }
 
 
@@ -68,19 +64,15 @@
         // Hide Progress dialog.
         hideProgressDialog()
 
-        if (serviceList.size > 0) {
+        if (serviceList.isNotEmpty()) {
             rv_hair_care_list.visibility = View.VISIBLE
-            tv_no_records_available.visibility = View.GONE
-
-            rv_hair_care_list.layoutManager = LinearLayoutManager(this)
-            rv_hair_care_list.setHasFixedSize(true)
-
+            //tv_no_records_available.visibility = View.GONE
             val adapterService =
-                HairCareServiceAdapter(applicationContext, serviceList, this@HairCareActivity)
+                HairCareServiceAdapter(this, serviceList)
             rv_hair_care_list.adapter = adapterService
         } else {
             rv_hair_care_list.visibility = View.GONE
-            tv_no_records_available.visibility = View.VISIBLE
+            //tv_no_records_available.visibility = View.VISIBLE
         }
     }
 
Index: app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sklagat46.reylla.adapter.providersAdapters\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.sklagat46.reylla.R\r\nimport com.sklagat46.reylla.activities.serviceproviders.HairCareActivity\r\nimport com.sklagat46.reylla.activities.serviceproviders.ui.details.ServiceDetailsActivity\r\nimport com.sklagat46.reylla.model.Service\r\nimport com.sklagat46.reylla.utils.Constants\r\nimport com.sklagat46.reylla.utils.GlideLoader\r\nimport kotlinx.android.synthetic.main.row_list_service_item.view.*\r\n\r\nclass HairCareServiceAdapter(\r\n    private val context: Context,\r\n    private var list: ArrayList<Service>,\r\n    private val activity: HairCareActivity\r\n) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n        return HairViewHolder(\r\n            LayoutInflater.from(context).inflate(\r\n                R.layout.row_list_service_item,\r\n                parent,\r\n                false\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n        val model = list[position]\r\n\r\n        if (holder is HairViewHolder) {\r\n\r\n            GlideLoader(context).loadServicePicture(\r\n                model.mServiceImageURL,\r\n                holder.itemView.iv_item_service_image\r\n            )\r\n\r\n            holder.itemView.tv_item_service_name.text = model.styleName\r\n            holder.itemView.tv_item_duration.text = model.styleDuration\r\n\r\n            holder.itemView.tv_item_cost.text = \"Ksh\" + \"$${model.styleCost}\"\r\n\r\n//            holder.itemView.iv_item_delete.setOnClickListener {\r\n//\r\n//                activity.deleteService(model.service_id)\r\n//            }\r\n\r\n            holder.itemView.setOnClickListener {\r\n                // Launch Product details screen.\r\n                val intent = Intent(context, ServiceDetailsActivity::class.java)\r\n                intent.putExtra(Constants.EXTRA_SERVICE_ID, model.service_id)\r\n                intent.putExtra(Constants.EXTRA_SERVICE_OWNER_ID, model.provider_id)\r\n                context.startActivity(intent)\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return list.size\r\n    }\r\n\r\n    inner class HairViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceAdapter.kt	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/java/com/sklagat46/reylla/adapter/providersAdapters/HairCareServiceAdapter.kt	(date 1621885938000)
@@ -7,7 +7,6 @@
 import android.view.ViewGroup
 import androidx.recyclerview.widget.RecyclerView
 import com.sklagat46.reylla.R
-import com.sklagat46.reylla.activities.serviceproviders.HairCareActivity
 import com.sklagat46.reylla.activities.serviceproviders.ui.details.ServiceDetailsActivity
 import com.sklagat46.reylla.model.Service
 import com.sklagat46.reylla.utils.Constants
@@ -17,7 +16,6 @@
 class HairCareServiceAdapter(
     private val context: Context,
     private var list: ArrayList<Service>,
-    private val activity: HairCareActivity
 ) : RecyclerView.Adapter<RecyclerView.ViewHolder>() {
 
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
@@ -36,15 +34,16 @@
 
         if (holder is HairViewHolder) {
 
+
             GlideLoader(context).loadServicePicture(
-                model.mServiceImageURL,
+                model.mserviceImageURL,
                 holder.itemView.iv_item_service_image
             )
 
+            //Picasso.get().load("http://i.imgur.com/DvpvklR.png").into(holder.itemView.iv_item_service_image);
             holder.itemView.tv_item_service_name.text = model.styleName
             holder.itemView.tv_item_duration.text = model.styleDuration
-
-            holder.itemView.tv_item_cost.text = "Ksh" + "$${model.styleCost}"
+            holder.itemView.tv_item_cost.text = model.styleCost
 
 //            holder.itemView.iv_item_delete.setOnClickListener {
 //
Index: app/src/main/res/layout/activity_hair_care.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".activities.serviceproviders.HairCareActivity\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar_hair_care_activity\"\r\n        android:layout_width=\"match_parent\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:layout_height=\"?attr/actionBarSize\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:gravity=\"center_vertical\"\r\n            android:text=\"Hair Care\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"24sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/rv_hair_care_list\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_marginTop=\"50dp\"\r\n        tools:listitem=\"@layout/row_service_item\"\r\n        android:visibility=\"gone\"\r\n        tools:visibility=\"gone\" />\r\n\r\n    <!--This text view we will make it visible when the list size is 0 means no data available to display in list.-->\r\n    <TextView\r\n        android:id=\"@+id/tv_no_records_available\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:gravity=\"center\"\r\n        android:text=\"There's no service yet,please add\"\r\n        android:textSize=\"16sp\"\r\n        android:visibility=\"visible\"\r\n        tools:visibility=\"visible\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tv_no_data_found\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:gravity=\"center\"\r\n        android:text=\"There's no service found\"\r\n        android:textSize=\"16sp\"\r\n        android:visibility=\"gone\"\r\n        tools:visibility=\"gone\" />\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/fab_add_hair_care\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom|end\"\r\n        android:layout_margin=\"15dp\"\r\n        app:srcCompat=\"@drawable/ic_baseline_add_24\"\r\n        android:contentDescription=\"@string/add_hair_care\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_hair_care.xml	(revision 7df925583ab76d3d4cc4458014786c9d099258d9)
+++ app/src/main/res/layout/activity_hair_care.xml	(date 1621885938000)
@@ -27,22 +27,22 @@
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/rv_hair_care_list"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
+        android:layout_height="wrap_content"
         android:layout_marginTop="50dp"
         tools:listitem="@layout/row_service_item"
-        android:visibility="gone"
-        tools:visibility="gone" />
+        android:visibility="visible"
+        tools:visibility="visible" />
 
     <!--This text view we will make it visible when the list size is 0 means no data available to display in list.-->
-    <TextView
-        android:id="@+id/tv_no_records_available"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:gravity="center"
-        android:text="There's no service yet,please add"
-        android:textSize="16sp"
-        android:visibility="visible"
-        tools:visibility="visible" />
+    <!--  <TextView
+          android:id="@+id/tv_no_records_available"
+          android:layout_width="match_parent"
+          android:layout_height="match_parent"
+          android:gravity="center"
+          android:text="There's no service yet,please add"
+          android:textSize="16sp"
+          android:visibility="visible"
+          tools:visibility="visible" />-->
 
     <TextView
         android:id="@+id/tv_no_data_found"
